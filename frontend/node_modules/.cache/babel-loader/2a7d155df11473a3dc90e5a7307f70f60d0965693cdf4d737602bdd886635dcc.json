{"ast":null,"code":"import axios from'axios';// Configurazione base di Axios\nconst api=axios.create({baseURL:'http://localhost:3001/api/v1',headers:{'Content-Type':'application/json'}});// Interceptor per gestire errori globalmente\napi.interceptors.response.use(response=>response,error=>{var _error$response,_error$response$data,_error$response2,_error$response2$data,_error$response2$data2,_error$response3,_error$response4;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:(_error$response2$data2=_error$response2$data.errors)===null||_error$response2$data2===void 0?void 0:_error$response2$data2.join(', '))||error.message||'Si è verificato un errore';return Promise.reject({message:errorMessage,status:(_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status,data:(_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.data});});export const taskService={// Ottieni tutti i task con paginazione\nasync getTasks(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const cleanFilters=Object.fromEntries(Object.entries(filters).filter(_ref=>{let[_,value]=_ref;return value!==undefined&&value!=='';}));const response=await api.get('/tasks',{params:cleanFilters});return response.data;},// Ottieni un singolo task\nasync getTask(id){const response=await api.get(\"/tasks/\".concat(id));return response.data.task;},// Crea un nuovo task\nasync createTask(taskData){const response=await api.post('/tasks',{task:taskData});return response.data.task;},// Aggiorna un task esistente\nasync updateTask(id,taskData){const response=await api.patch(\"/tasks/\".concat(id),{task:taskData});return response.data.task;},// Elimina un task\nasync deleteTask(id){await api.delete(\"/tasks/\".concat(id));},// Toggle stato completato\nasync toggleComplete(id,completed){return this.updateTask(id,{completed});}};// Helper per gestire errori in modo consistente\nexport const handleApiError=error=>{var _error$response5,_error$response5$data,_error$response6,_error$response6$data;if(error.message)return error.message;if((_error$response5=error.response)!==null&&_error$response5!==void 0&&(_error$response5$data=_error$response5.data)!==null&&_error$response5$data!==void 0&&_error$response5$data.error)return error.response.data.error;if((_error$response6=error.response)!==null&&_error$response6!==void 0&&(_error$response6$data=_error$response6.data)!==null&&_error$response6$data!==void 0&&_error$response6$data.errors)return error.response.data.errors.join(', ');return'Si è verificato un errore imprevisto';};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","response","use","error","_error$response","_error$response$data","_error$response2","_error$response2$data","_error$response2$data2","_error$response3","_error$response4","errorMessage","data","errors","join","message","Promise","reject","status","taskService","getTasks","filters","arguments","length","undefined","cleanFilters","Object","fromEntries","entries","filter","_ref","_","value","get","params","getTask","id","concat","task","createTask","taskData","post","updateTask","patch","deleteTask","delete","toggleComplete","completed","handleApiError","_error$response5","_error$response5$data","_error$response6","_error$response6$data"],"sources":["/Users/antonio/Task_Manager_API/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport {\n    Task,\n    CreateTaskRequest,\n    UpdateTaskRequest,\n    TasksResponse,\n    TaskResponse,\n    SearchFilters\n} from '../types';\n\n// Configurazione base di Axios\nconst api = axios.create({\n    baseURL: 'http://localhost:3001/api/v1',\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Interceptor per gestire errori globalmente\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        const errorMessage = error.response?.data?.error ||\n            error.response?.data?.errors?.join(', ') ||\n            error.message ||\n            'Si è verificato un errore';\n\n        return Promise.reject({\n            message: errorMessage,\n            status: error.response?.status,\n            data: error.response?.data\n        });\n    }\n);\n\nexport const taskService = {\n    // Ottieni tutti i task con paginazione\n    async getTasks(filters: SearchFilters = {}): Promise<TasksResponse> {\n        const cleanFilters = Object.fromEntries(\n            Object.entries(filters).filter(([_, value]) => value !== undefined && value !== '')\n        );\n\n        const response = await api.get<TasksResponse>('/tasks', {\n            params: cleanFilters\n        });\n        return response.data;\n    },\n\n    // Ottieni un singolo task\n    async getTask(id: number): Promise<Task> {\n        const response = await api.get<TaskResponse>(`/tasks/${id}`);\n        return response.data.task;\n    },\n\n    // Crea un nuovo task\n    async createTask(taskData: CreateTaskRequest): Promise<Task> {\n        const response = await api.post<TaskResponse>('/tasks', {\n            task: taskData\n        });\n        return response.data.task;\n    },\n\n    // Aggiorna un task esistente\n    async updateTask(id: number, taskData: UpdateTaskRequest): Promise<Task> {\n        const response = await api.patch<TaskResponse>(`/tasks/${id}`, {\n            task: taskData\n        });\n        return response.data.task;\n    },\n\n    // Elimina un task\n    async deleteTask(id: number): Promise<void> {\n        await api.delete(`/tasks/${id}`);\n    },\n\n    // Toggle stato completato\n    async toggleComplete(id: number, completed: boolean): Promise<Task> {\n        return this.updateTask(id, { completed });\n    }\n};\n\n// Helper per gestire errori in modo consistente\nexport const handleApiError = (error: any): string => {\n    if (error.message) return error.message;\n    if (error.response?.data?.error) return error.response.data.error;\n    if (error.response?.data?.errors) return error.response.data.errors.join(', ');\n    return 'Si è verificato un errore imprevisto';\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}