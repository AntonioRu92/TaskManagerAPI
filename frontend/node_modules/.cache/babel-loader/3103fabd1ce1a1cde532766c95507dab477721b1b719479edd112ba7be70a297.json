{"ast":null,"code":"var _jsxFileName = \"/Users/antonio/Task_Manager_API/frontend/src/pages/CreateTask.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\nimport { createTask, clearError } from '../store/tasksSlice';\nimport { showToast } from '../components/ToastContainer';\nimport { ArrowLeftIcon, PlusIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateTask = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const {\n    loading,\n    error\n  } = useAppSelector(state => state.tasks);\n\n  // Extract specific loading state for create operation\n  const isCreating = loading.createTask === 'loading';\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    completed: false\n  });\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    if (error) {\n      showToast(error, 'error');\n      dispatch(clearError());\n    }\n  }, [error, dispatch]);\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.title.trim()) {\n      newErrors.title = 'Title is required';\n    } else if (formData.title.trim().length < 3) {\n      newErrors.title = 'Title must be at least 3 characters long';\n    } else if (formData.title.trim().length > 200) {\n      newErrors.title = 'Title must be less than 200 characters';\n    }\n    if (formData.description && formData.description.length > 1000) {\n      newErrors.description = 'Description must be less than 1000 characters';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      const taskData = {\n        title: formData.title.trim(),\n        description: formData.description.trim() || undefined,\n        completed: formData.completed\n      };\n      const result = await dispatch(createTask(taskData)).unwrap();\n      showToast('Task created successfully!', 'success');\n      navigate(`/tasks/${result.id}`);\n    } catch (error) {\n      showToast('Failed to create task', 'error');\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const checked = e.target.checked;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/tasks\",\n        className: \"inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeftIcon, {\n          className: \"h-4 w-4 mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), \"Back to Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-900\",\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-1 text-sm text-gray-600\",\n        children: \"Add a new task to your list to keep track of your work.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-lg rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"p-6 space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"title\",\n              name: \"title\",\n              value: formData.title,\n              onChange: handleChange,\n              className: `block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${errors.title ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : ''}`,\n              placeholder: \"Enter task title...\",\n              maxLength: 200\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2 text-sm text-red-600\",\n              children: errors.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-xs text-gray-500\",\n              children: [formData.title.length, \"/200 characters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              name: \"description\",\n              rows: 4,\n              value: formData.description,\n              onChange: handleChange,\n              className: `block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${errors.description ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : ''}`,\n              placeholder: \"Enter task description (optional)...\",\n              maxLength: 1000\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), errors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2 text-sm text-red-600\",\n              children: errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-xs text-gray-500\",\n              children: [formData.description.length, \"/1000 characters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"completed\",\n            name: \"completed\",\n            type: \"checkbox\",\n            checked: formData.completed,\n            onChange: handleChange,\n            className: \"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"completed\",\n            className: \"ml-2 block text-sm text-gray-900\",\n            children: \"Mark as completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3 pt-6 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/tasks\",\n            className: \"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isCreating,\n            className: \"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: isCreating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this), \"Creating...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n                className: \"h-4 w-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this), \"Create Task\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 bg-blue-50 border border-blue-200 rounded-md p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-blue-800\",\n            children: \"Tips for creating effective tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-sm text-blue-700\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc pl-5 space-y-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Use clear, actionable titles that describe what needs to be done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Add detailed descriptions to provide context and requirements\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Break down large tasks into smaller, manageable subtasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Use consistent naming conventions for similar types of tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateTask, \"Cw1zTEHArX2dWaC97fZTVOUzIDQ=\", false, function () {\n  return [useNavigate, useAppDispatch, useAppSelector];\n});\n_c = CreateTask;\nexport default CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","useAppDispatch","useAppSelector","createTask","clearError","showToast","ArrowLeftIcon","PlusIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateTask","_s","navigate","dispatch","loading","error","state","tasks","isCreating","formData","setFormData","title","description","completed","errors","setErrors","validateForm","newErrors","trim","length","Object","keys","handleSubmit","e","preventDefault","taskData","undefined","result","unwrap","id","handleChange","name","value","type","target","checked","prev","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","placeholder","maxLength","rows","disabled","_c","$RefreshReg$"],"sources":["/Users/antonio/Task_Manager_API/frontend/src/pages/CreateTask.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\nimport { createTask, clearError } from '../store/tasksSlice';\nimport { showToast } from '../components/ToastContainer';\nimport { ArrowLeftIcon, PlusIcon } from '@heroicons/react/24/outline';\n\nconst CreateTask: React.FC = () => {\n    const navigate = useNavigate();\n    const dispatch = useAppDispatch();\n    const { loading, error } = useAppSelector(state => state.tasks);\n\n    // Extract specific loading state for create operation\n    const isCreating = loading.createTask === 'loading';\n\n    const [formData, setFormData] = useState({\n        title: '',\n        description: '',\n        completed: false\n    });\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n\n    useEffect(() => {\n        if (error) {\n            showToast(error, 'error');\n            dispatch(clearError());\n        }\n    }, [error, dispatch]);\n\n    const validateForm = () => {\n        const newErrors: Record<string, string> = {};\n\n        if (!formData.title.trim()) {\n            newErrors.title = 'Title is required';\n        } else if (formData.title.trim().length < 3) {\n            newErrors.title = 'Title must be at least 3 characters long';\n        } else if (formData.title.trim().length > 200) {\n            newErrors.title = 'Title must be less than 200 characters';\n        }\n\n        if (formData.description && formData.description.length > 1000) {\n            newErrors.description = 'Description must be less than 1000 characters';\n        }\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (!validateForm()) {\n            return;\n        }\n\n        try {\n            const taskData = {\n                title: formData.title.trim(),\n                description: formData.description.trim() || undefined,\n                completed: formData.completed\n            };\n\n            const result = await dispatch(createTask(taskData)).unwrap();\n            showToast('Task created successfully!', 'success');\n            navigate(`/tasks/${result.id}`);\n        } catch (error) {\n            showToast('Failed to create task', 'error');\n        }\n    };\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        const { name, value, type } = e.target;\n        const checked = (e.target as HTMLInputElement).checked;\n\n        setFormData(prev => ({\n            ...prev,\n            [name]: type === 'checkbox' ? checked : value\n        }));\n\n        // Clear error when user starts typing\n        if (errors[name]) {\n            setErrors(prev => ({ ...prev, [name]: '' }));\n        }\n    };\n\n    return (\n        <div className=\"max-w-2xl mx-auto\">\n            {/* Navigation */}\n            <div className=\"mb-6\">\n                <Link\n                    to=\"/tasks\"\n                    className=\"inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n                >\n                    <ArrowLeftIcon className=\"h-4 w-4 mr-1\" />\n                    Back to Tasks\n                </Link>\n            </div>\n\n            {/* Header */}\n            <div className=\"mb-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900\">Create New Task</h1>\n                <p className=\"mt-1 text-sm text-gray-600\">\n                    Add a new task to your list to keep track of your work.\n                </p>\n            </div>\n\n            {/* Form */}\n            <div className=\"bg-white shadow-lg rounded-lg\">\n                <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n                    {/* Title */}\n                    <div>\n                        <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700\">\n                            Title <span className=\"text-red-500\">*</span>\n                        </label>\n                        <div className=\"mt-1\">\n                            <input\n                                type=\"text\"\n                                id=\"title\"\n                                name=\"title\"\n                                value={formData.title}\n                                onChange={handleChange}\n                                className={`block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${errors.title ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : ''\n                                    }`}\n                                placeholder=\"Enter task title...\"\n                                maxLength={200}\n                            />\n                            {errors.title && (\n                                <p className=\"mt-2 text-sm text-red-600\">{errors.title}</p>\n                            )}\n                            <p className=\"mt-1 text-xs text-gray-500\">\n                                {formData.title.length}/200 characters\n                            </p>\n                        </div>\n                    </div>\n\n                    {/* Description */}\n                    <div>\n                        <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n                            Description\n                        </label>\n                        <div className=\"mt-1\">\n                            <textarea\n                                id=\"description\"\n                                name=\"description\"\n                                rows={4}\n                                value={formData.description}\n                                onChange={handleChange}\n                                className={`block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${errors.description ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : ''\n                                    }`}\n                                placeholder=\"Enter task description (optional)...\"\n                                maxLength={1000}\n                            />\n                            {errors.description && (\n                                <p className=\"mt-2 text-sm text-red-600\">{errors.description}</p>\n                            )}\n                            <p className=\"mt-1 text-xs text-gray-500\">\n                                {formData.description.length}/1000 characters\n                            </p>\n                        </div>\n                    </div>\n\n                    {/* Completed Status */}\n                    <div className=\"flex items-center\">\n                        <input\n                            id=\"completed\"\n                            name=\"completed\"\n                            type=\"checkbox\"\n                            checked={formData.completed}\n                            onChange={handleChange}\n                            className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                        />\n                        <label htmlFor=\"completed\" className=\"ml-2 block text-sm text-gray-900\">\n                            Mark as completed\n                        </label>\n                    </div>\n\n                    {/* Actions */}\n                    <div className=\"flex justify-end space-x-3 pt-6 border-t border-gray-200\">\n                        <Link\n                            to=\"/tasks\"\n                            className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                        >\n                            Cancel\n                        </Link>\n                        <button\n                            type=\"submit\"\n                            disabled={isCreating}\n                            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                            {isCreating ? (\n                                <>\n                                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                                    Creating...\n                                </>\n                            ) : (\n                                <>\n                                    <PlusIcon className=\"h-4 w-4 mr-2\" />\n                                    Create Task\n                                </>\n                            )}\n                        </button>\n                    </div>\n                </form>\n            </div>\n\n            {/* Help Text */}\n            <div className=\"mt-6 bg-blue-50 border border-blue-200 rounded-md p-4\">\n                <div className=\"flex\">\n                    <div className=\"ml-3\">\n                        <h3 className=\"text-sm font-medium text-blue-800\">\n                            Tips for creating effective tasks\n                        </h3>\n                        <div className=\"mt-2 text-sm text-blue-700\">\n                            <ul className=\"list-disc pl-5 space-y-1\">\n                                <li>Use clear, actionable titles that describe what needs to be done</li>\n                                <li>Add detailed descriptions to provide context and requirements</li>\n                                <li>Break down large tasks into smaller, manageable subtasks</li>\n                                <li>Use consistent naming conventions for similar types of tasks</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CreateTask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}