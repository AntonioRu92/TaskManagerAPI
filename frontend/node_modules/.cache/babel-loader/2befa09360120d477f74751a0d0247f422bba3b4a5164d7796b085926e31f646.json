{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import{CheckCircleIcon,ClockIcon,PencilIcon,TrashIcon,EyeIcon}from'@heroicons/react/24/outline';import{CheckCircleIcon as CheckCircleIconSolid}from'@heroicons/react/24/solid';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskCard=_ref=>{let{task,onToggleComplete,onDelete,showActions=true}=_ref;const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('it-IT',{year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'});};const truncateText=function(text){let maxLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:100;if(text.length<=maxLength)return text;return text.substring(0,maxLength)+'...';};return/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 border-l-4 \".concat(task.completed?'border-green-500':'border-blue-500'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start space-x-3 flex-1\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>onToggleComplete(task.id,!task.completed),className:\"mt-1 transition-colors \".concat(task.completed?'text-green-600 hover:text-green-700':'text-gray-400 hover:text-green-600'),children:task.completed?/*#__PURE__*/_jsx(CheckCircleIconSolid,{className:\"h-6 w-6\"}):/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"h-6 w-6\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold \".concat(task.completed?'text-gray-500 line-through':'text-gray-900'),children:task.highlighted_title?/*#__PURE__*/_jsx(\"span\",{dangerouslySetInnerHTML:{__html:task.highlighted_title}}):task.title}),task.description&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-1 \".concat(task.completed?'text-gray-400':'text-gray-600'),children:task.description_excerpt?/*#__PURE__*/_jsx(\"span\",{dangerouslySetInnerHTML:{__html:task.description_excerpt}}):truncateText(task.description)})]})]}),/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \".concat(task.completed?'bg-green-100 text-green-800':'bg-blue-100 text-blue-800'),children:task.completed?'Completato':'In Corso'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between pt-3 border-t border-gray-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-sm text-gray-500\",children:[/*#__PURE__*/_jsx(ClockIcon,{className:\"h-4 w-4 mr-1\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Creato \",formatDate(task.created_at)]}),task.updated_at!==task.created_at&&/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2\",children:[\"\\u2022 Aggiornato \",formatDate(task.updated_at)]})]}),showActions&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(Link,{to:\"/tasks/\".concat(task.id),className:\"text-gray-400 hover:text-blue-600 transition-colors\",title:\"Visualizza Dettagli\",children:/*#__PURE__*/_jsx(EyeIcon,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsx(Link,{to:\"/tasks/\".concat(task.id,\"/edit\"),className:\"text-gray-400 hover:text-yellow-600 transition-colors\",title:\"Modifica Task\",children:/*#__PURE__*/_jsx(PencilIcon,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onDelete(task.id),className:\"text-gray-400 hover:text-red-600 transition-colors\",title:\"Elimina Task\",children:/*#__PURE__*/_jsx(TrashIcon,{className:\"h-4 w-4\"})})]})]})]})});};export default TaskCard;","map":{"version":3,"names":["React","Link","CheckCircleIcon","ClockIcon","PencilIcon","TrashIcon","EyeIcon","CheckCircleIconSolid","jsx","_jsx","jsxs","_jsxs","TaskCard","_ref","task","onToggleComplete","onDelete","showActions","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","truncateText","text","maxLength","arguments","length","undefined","substring","className","concat","completed","children","onClick","id","highlighted_title","dangerouslySetInnerHTML","__html","title","description","description_excerpt","created_at","updated_at","to"],"sources":["/Users/antonio/Task_Manager_API/frontend/src/components/TaskCard.tsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Task } from '../types';\nimport {\n    CheckCircleIcon,\n    ClockIcon,\n    PencilIcon,\n    TrashIcon,\n    EyeIcon\n} from '@heroicons/react/24/outline';\nimport { CheckCircleIcon as CheckCircleIconSolid } from '@heroicons/react/24/solid';\n\ninterface TaskCardProps {\n    task: Task;\n    onToggleComplete: (id: number, completed: boolean) => void;\n    onDelete: (id: number) => void;\n    showActions?: boolean;\n}\n\nconst TaskCard: React.FC<TaskCardProps> = ({\n    task,\n    onToggleComplete,\n    onDelete,\n    showActions = true\n}) => {\n    const formatDate = (dateString: string) => {\n        return new Date(dateString).toLocaleDateString('it-IT', {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    };\n\n    const truncateText = (text: string, maxLength: number = 100) => {\n        if (text.length <= maxLength) return text;\n        return text.substring(0, maxLength) + '...';\n    };\n\n    return (\n        <div className={`bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 border-l-4 ${task.completed ? 'border-green-500' : 'border-blue-500'\n            }`}>\n            <div className=\"p-6\">\n                {/* Header */}\n                <div className=\"flex items-start justify-between mb-3\">\n                    <div className=\"flex items-start space-x-3 flex-1\">\n                        <button\n                            onClick={() => onToggleComplete(task.id, !task.completed)}\n                            className={`mt-1 transition-colors ${task.completed\n                                ? 'text-green-600 hover:text-green-700'\n                                : 'text-gray-400 hover:text-green-600'\n                                }`}\n                        >\n                            {task.completed ? (\n                                <CheckCircleIconSolid className=\"h-6 w-6\" />\n                            ) : (\n                                <CheckCircleIcon className=\"h-6 w-6\" />\n                            )}\n                        </button>\n\n                        <div className=\"flex-1 min-w-0\">\n                            <h3 className={`text-lg font-semibold ${task.completed ? 'text-gray-500 line-through' : 'text-gray-900'\n                                }`}>\n                                {task.highlighted_title ? (\n                                    <span dangerouslySetInnerHTML={{ __html: task.highlighted_title }} />\n                                ) : (\n                                    task.title\n                                )}\n                            </h3>\n\n                            {task.description && (\n                                <p className={`text-sm mt-1 ${task.completed ? 'text-gray-400' : 'text-gray-600'\n                                    }`}>\n                                    {task.description_excerpt ? (\n                                        <span dangerouslySetInnerHTML={{ __html: task.description_excerpt }} />\n                                    ) : (\n                                        truncateText(task.description)\n                                    )}\n                                </p>\n                            )}\n                        </div>\n                    </div>\n\n                    {/* Status Badge */}\n                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${task.completed\n                        ? 'bg-green-100 text-green-800'\n                        : 'bg-blue-100 text-blue-800'\n                        }`}>\n                        {task.completed ? 'Completato' : 'In Corso'}\n                    </span>\n                </div>\n\n                {/* Footer */}\n                <div className=\"flex items-center justify-between pt-3 border-t border-gray-100\">\n                    <div className=\"flex items-center text-sm text-gray-500\">\n                        <ClockIcon className=\"h-4 w-4 mr-1\" />\n                        <span>Creato {formatDate(task.created_at)}</span>\n                        {task.updated_at !== task.created_at && (\n                            <span className=\"ml-2\">â€¢ Aggiornato {formatDate(task.updated_at)}</span>\n                        )}\n                    </div>\n\n                    {showActions && (\n                        <div className=\"flex items-center space-x-2\">\n                            <Link\n                                to={`/tasks/${task.id}`}\n                                className=\"text-gray-400 hover:text-blue-600 transition-colors\"\n                                title=\"Visualizza Dettagli\"\n                            >\n                                <EyeIcon className=\"h-4 w-4\" />\n                            </Link>\n                            <Link\n                                to={`/tasks/${task.id}/edit`}\n                                className=\"text-gray-400 hover:text-yellow-600 transition-colors\"\n                                title=\"Modifica Task\"\n                            >\n                                <PencilIcon className=\"h-4 w-4\" />\n                            </Link>\n                            <button\n                                onClick={() => onDelete(task.id)}\n                                className=\"text-gray-400 hover:text-red-600 transition-colors\"\n                                title=\"Elimina Task\"\n                            >\n                                <TrashIcon className=\"h-4 w-4\" />\n                            </button>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}